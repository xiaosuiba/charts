apiVersion: v1
kind: ConfigMap
metadata: 
  name: {{ .Release.Name }}-edgex-support-scheduler
data:
  application.properties: |
    ###############################################################################
    # Copyright 2016-2017 Dell Inc.
    #
    # Licensed under the Apache License, Version 2.0 (the "License");
    # you may not use this file except in compliance with the License.
    # You may obtain a copy of the License at
    #
    # http://www.apache.org/licenses/LICENSE-2.0
    #
    # Unless required by applicable law or agreed to in writing, software
    # distributed under the License is distributed on an "AS IS" BASIS,
    # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    # See the License for the specific language governing permissions and
    # limitations under the License.
    #
    # @microservice:  support-scheduler
    # @author: Marc Hammons, Dell
    # @version: 1.0.0
    ###############################################################################
    #--Docker container specific app properties -----
    #-----------General Config--------------------
    # REST read data limit
    read.max.limit=100
    # set port (override Spring boot default port 8080 )
    server.port=48085
    # callback timeout in milliseconds
    server.timeout=5000
    # log heart beat every 5 minutes
    heart.beat.time=300000
    # service messages
    heart.beat.msg=lub dub
    app.open.msg=this is the scheduler micro service

    #-----------Service Config--------------------
    service.name=edgex-support-scheduler
    service.host=${service.name}
    service.port=${server.port}
    service.labels=
    service.callback=/v1/callbacks

    # number of attempts to connect to meta data (0 - indefinite)
    service.connect.retries=0
    # interval to try connecting to meta data
    service.connect.interval=10000

    #-----------Scheduler Config--------------------
    # schedule interval in ms
    schedule.interval=500

    # Add comma separated schedule and scheduleevent initializations, may be partially specified, used by SimpleSchedule and SimpleScheduleEvent for initialization
    default.schedule.name=midnight
    default.schedule.frequency=P1D
    default.schedule.start=20170101T000000

    # by default - scrub core data using two different means - pushed events and aged events
    default.scheduleEvent.name=scrub-pushed-events,scrub-aged-events
    default.scheduleEvent.method=DELETE,DELETE
    default.scheduleEvent.service=edgex-core-data,edgex-core-data
    # scrub pushed and by time (1 week)
    default.scheduleEvent.path=/api/v1/event/scrub,/api/v1/event/removeold/age/604800000
    default.scheduleEvent.schedule=midnight,midnight
    # these belong to the support scheduler (this service)
    default.scheduleEvent.scheduler=edgex-support-scheduler,edgex-support-scheduler

    #-----------Logging Config--------------------
    # logging levels (used to control log4j entries)
    logging.level.org.springframework=ERROR
    logging.level.org.apache=ERROR
    logging.level.org.edgexfoundry=INFO
    # log files are rotated after 10MB by default in Spring boot
    logging.file=/edgex/logs/edgex-core-scheduler.log
    logging.remote.url=http://{{ .Release.Name }}-edgex-support-logging:48061/api/v1/logs

    #-----------------Consul Config------------------------------------------
    #The health checking path for Service Registry
    spring.cloud.consul.discovery.healthCheckPath=/api/v1/ping

    logging.remote.enable=true
    #------------------- REST Endpoints ---------------------------------------
    # metadata database service connection information
    meta.db.addressable.url=http://{{ .Release.Name }}-edgex-core-metadata:48081/api/v1/addressable
    meta.db.deviceservice.url=http://{{ .Release.Name }}-edgex-core-metadata:48081/api/v1/deviceservice
    meta.db.deviceprofile.url=http://{{ .Release.Name }}-edgex-core-metadata:48081/api/v1/deviceprofile
    meta.db.device.url=http://{{ .Release.Name }}-edgex-core-metadata:48081/api/v1/device
    meta.db.devicereport.url=http://{{ .Release.Name }}-edgex-core-metadata:48081/api/v1/devicereport
    meta.db.command.url=http://{{ .Release.Name }}-edgex-core-metadata:48081/api/v1/command
    meta.db.event.url=http://{{ .Release.Name }}-edgex-core-metadata:48081/api/v1/scheduleevent
    meta.db.schedule.url=http://{{ .Release.Name }}-edgex-core-metadata:48081/api/v1/schedule
    meta.db.provisionwatcher.url=http://{{ .Release.Name }}-edgex-core-metadata:48081/api/v1/provisionwatcher
    meta.db.ping.url=http://{{ .Release.Name }}-edgex-core-metadata:48081/api/v1/ping

  bootstrap.properties: |
    ###############################################################################
    # Copyright 2016-2017 Dell Inc.
    #
    # Licensed under the Apache License, Version 2.0 (the "License");
    # you may not use this file except in compliance with the License.
    # You may obtain a copy of the License at
    #
    # http://www.apache.org/licenses/LICENSE-2.0
    #
    # Unless required by applicable law or agreed to in writing, software
    # distributed under the License is distributed on an "AS IS" BASIS,
    # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    # See the License for the specific language governing permissions and
    # limitations under the License.
    #
    # @microservice:  support-scheduler
    # @author: Marc Hammons, Dell
    # @version: 1.0.0
    ###############################################################################
    spring.application.name={{ .Release.Name }}-edgex-support-scheduler
    spring.cloud.consul.host={{ .Release.Name }}-edgex-core-consul
    spring.cloud.consul.port=8500
    spring.cloud.consul.config.profileSeparator=;
    spring.cloud.consul.enabled=true
    spring.profiles.active=docker
    spring.cloud.consul.discovery.healthCheckUrl=http://{{ .Release.Name }}-edgex-support-scheduler:${server.port}/api/v1/ping

  configuration.toml: |
    [Writable]
    ScheduleIntervalTime = 500
    LogLevel = 'INFO'

    [Service]
    BootTimeout = 30000
    ClientMonitor = 15000
    CheckInterval = '10s'
    Host = '{{ .Release.Name }}-edgex-support-scheduler'
    Port = 48085
    Protocol = 'http'
    ReadMaxLimit = 100
    StartupMsg = 'This is the Support Scheduler Microservice'
    Timeout = 5000

    [Registry]
    Host = '{{ .Release.Name }}-edgex-core-consul'
    Port = 8500
    Type = 'consul'

    [Logging]
    EnableRemote = false
    File = '/edgex/logs/edgex-support-scheduler.log'

    [Clients]
      [Clients.Logging]
      Protocol = 'http'
      Host = '{{ .Release.Name }}-edgex-support-logging'
      Port = 48061

    [Databases]
      [Databases.Primary]
      Host = '{{ .Release.Name }}-edgex-mongo'
      Name = 'meta'
      Password = 'password'
      Port = 27017
      Username = 'scheduler'
      Timeout = 5000
      Type = 'mongodb'

    [Intervals]
        [Intervals.Midnight]
        Name = 'midnight'
        Start = '20180101T000000'
        Frequency = 'P1D'

    [IntervalActions]
        [IntervalActions.ScrubPushed]
        Name = 'scrub-pushed-events'
        Host = '{{ .Release.Name }}-edgex-core-data'
        Port = 48080
        Protocol = 'http'
        Method = 'DELETE'
        Target = 'core-data'
        Path = '/api/v1/event/scrub'
        Interval = 'midnight'

        [IntervalActions.ScrubAged]
        Name = 'scrub-aged-events'
        Host = '{{ .Release.Name }}-edgex-core-data'
        Port = 48080
        Protocol = 'http'
        Method = 'DELETE'
        Target = 'core-data'
        Path = '/api/v1/event/removeold/age/604800000'
        Interval = 'midnight'
